{"ast":null,"code":"import _slicedToArray from \"/Users/nickwhite/go/antipathy/allergen-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nickwhite/go/antipathy/allergen-ui/src/components/CameraFeed.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Webcam } from 'react-webcam';\nexport const CameraFeed = () => {\n  const initialImage = {\n    image: null,\n    isLoading: false,\n    capturured: false,\n    webcam: useEffect(getWebcam())\n  };\n\n  const _useState = useState([initialImage]),\n        _useState2 = _slicedToArray(_useState, 2),\n        capturedImage = _useState2[0],\n        setCapturedImage = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 1),\n        webcam = _useState4[0];\n\n  useEffect(() => {\n    var cameraElement = document.createElement('canvas');\n    webcam = new Webcam(document.getElementById('webcam'), cameraElement);\n    webcam.setup().catch(response => {\n      alert('Error accessing camera');\n    });\n  });\n  useEffect(capturedImage => {\n    if (capturedImage.captured) {}\n  });\n\n  const getWebcam = () => {\n    if (!capturedImage.image) {\n      var cameraElement = document.createElement('canvas');\n      webcam = new Webcam(document.getElementById('webcam'), cameraElement);\n      webcam.setup().catch(response => {\n        alert('Error accessing camera');\n      });\n    }\n\n    return webcam;\n  };\n\n  const uploading = capturedImage.isLoading ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Uploading, hold on....\")) : React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, capturedImage.image);\n  const current = !capturedImage.captured ? React.createElement(\"input\", {\n    type: \"file\",\n    accept: \"image/*\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }) : capturedImage.image;\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, uploading), React.createElement(Button, {\n    class: \"captureButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Upload Photo\"), React.createElement(Button, {\n    class: \"takePicture\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Take Picture\"));\n};\nexport default CameraFeed;","map":{"version":3,"sources":["/Users/nickwhite/go/antipathy/allergen-ui/src/components/CameraFeed.js"],"names":["React","axios","useState","useEffect","Button","Webcam","CameraFeed","initialImage","image","isLoading","capturured","webcam","getWebcam","capturedImage","setCapturedImage","cameraElement","document","createElement","getElementById","setup","catch","response","alert","captured","uploading","current"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,MAAT,QAAuB,cAAvB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC5B,QAAMC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAE,IADU;AAEjBC,IAAAA,SAAS,EAAE,KAFM;AAGjBC,IAAAA,UAAU,EAAE,KAHK;AAIjBC,IAAAA,MAAM,EAAER,SAAS,CAACS,SAAS,EAAV;AAJA,GAArB;;AAD4B,oBAOcV,QAAQ,CAAC,CAACK,YAAD,CAAD,CAPtB;AAAA;AAAA,QAOrBM,aAPqB;AAAA,QAONC,gBAPM;;AAAA,qBAQXZ,QAAQ,EARG;AAAA;AAAA,QAQrBS,MARqB;;AAU5BR,EAAAA,SAAS,CAAC,MAAK;AACX,QAAIY,aAAa,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAApB;AACAN,IAAAA,MAAM,GAAG,IAAIN,MAAJ,CACLW,QAAQ,CAACE,cAAT,CAAwB,QAAxB,CADK,EAELH,aAFK,CAAT;AAIAJ,IAAAA,MAAM,CAACQ,KAAP,GAAeC,KAAf,CAAqBC,QAAQ,IAAI;AAC7BC,MAAAA,KAAK,CAAC,wBAAD,CAAL;AACH,KAFD;AAIH,GAVQ,CAAT;AAYAnB,EAAAA,SAAS,CAACU,aAAa,IAAI;AACvB,QAAIA,aAAa,CAACU,QAAlB,EAA4B,CAE3B;AACJ,GAJQ,CAAT;;AAMA,QAAMX,SAAS,GAAG,MAAM;AACpB,QAAI,CAACC,aAAa,CAACL,KAAnB,EAA0B;AACtB,UAAIO,aAAa,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAApB;AACAN,MAAAA,MAAM,GAAG,IAAIN,MAAJ,CACTW,QAAQ,CAACE,cAAT,CAAwB,QAAxB,CADS,EAETH,aAFS,CAAT;AAIJJ,MAAAA,MAAM,CAACQ,KAAP,GAAeC,KAAf,CAAqBC,QAAQ,IAAI;AAC7BC,QAAAA,KAAK,CAAC,wBAAD,CAAL;AACH,OAFD;AAGC;;AAED,WAAOX,MAAP;AACH,GAbD;;AAeA,QAAMa,SAAS,GAAGX,aAAa,CAACJ,SAAd,GACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,CADc,GAId;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOI,aAAa,CAACL,KAArB,CAJJ;AAMA,QAAMiB,OAAO,GAAG,CAACZ,aAAa,CAACU,QAAf,GACZ;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,MAAM,EAAC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADY,GAGZV,aAAa,CAACL,KAHlB;AAIA,SACI,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMgB,SAAN,CADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAGI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,CADJ;AAUH,CA/DM;AAiEP,eAAelB,UAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Webcam } from 'react-webcam';\n\nexport const CameraFeed = () => {\n    const initialImage = {\n        image: null,\n        isLoading: false,\n        capturured: false,\n        webcam: useEffect(getWebcam())\n    };\n    const [capturedImage, setCapturedImage] = useState([initialImage]);\n    const [webcam] = useState();\n\n    useEffect(() =>{\n        var cameraElement = document.createElement('canvas');\n        webcam = new Webcam(\n            document.getElementById('webcam'),\n            cameraElement\n        );\n        webcam.setup().catch(response => {\n            alert('Error accessing camera');\n        })\n        \n    });\n\n    useEffect(capturedImage => {\n        if (capturedImage.captured) {\n\n        }\n    })\n\n    const getWebcam = () => {\n        if (!capturedImage.image) {\n            var cameraElement = document.createElement('canvas');\n            webcam = new Webcam(\n            document.getElementById('webcam'),\n            cameraElement\n        );\n        webcam.setup().catch(response => {\n            alert('Error accessing camera');\n        })\n        }\n\n        return webcam;\n    }\n\n    const uploading = capturedImage.isLoading ?\n        <div>\n            <p>Uploading, hold on....</p>\n        </div> :\n        <span>{capturedImage.image}</span>\n\n    const current = !capturedImage.captured ? \n        <input type=\"file\" accept=\"image/*\"/> \n        :\n        capturedImage.image;\n    return (\n        <>\n            <div>{uploading}</div>\n            <Button class=\"captureButton\">Upload Photo</Button>\n            <Button class='takePicture'>Take Picture</Button>\n\n        </>\n\n\n    );\n};\n\nexport default CameraFeed;"]},"metadata":{},"sourceType":"module"}
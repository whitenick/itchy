{"ast":null,"code":"import _slicedToArray from \"/Users/nickwhite/go/wingspan/allergen-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nickwhite/go/wingspan/allergen-ui/src/components/Crypto.js\";\nimport React from 'react';\nimport { useState } from 'react';\n\nconst Crypto = () => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isShown = _useState2[0],\n        showResult = _useState2[1];\n\n  const sendCryptoRequest = () => {\n    showResult(true);\n  };\n\n  const CryptoResults = () => {\n    if (isShown) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"HUGE crypto guy\"));\n    }\n\n    return null;\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Hello Crypto API\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"lets get this bread\"), React.createElement(\"button\", {\n    onClick: sendCryptoRequest,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Get Bread (chaching)\"), React.createElement(CryptoResults, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n};\n\nexport default Crypto;","map":{"version":3,"sources":["/Users/nickwhite/go/wingspan/allergen-ui/src/components/Crypto.js"],"names":["React","useState","Crypto","isShown","showResult","sendCryptoRequest","CryptoResults"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAGA,MAAMC,MAAM,GAAG,MAAM;AAAA,oBACaD,QAAQ,CAAC,KAAD,CADrB;AAAA;AAAA,QACVE,OADU;AAAA,QACDC,UADC;;AAGjB,QAAMC,iBAAiB,GAAG,MAAM;AAC5BD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACH,GAFD;;AAIA,QAAME,aAAa,GAAG,MAAM;AACxB,QAAIH,OAAJ,EAAa;AACT,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,CADJ;AAKH;;AACD,WAAO,IAAP;AACH,GATD;;AAWA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFJ,EAGI;AAAQ,IAAA,OAAO,EAAEE,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHJ,EAII,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAQH,CA1BD;;AA4BA,eAAeH,MAAf","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\n\n\nconst Crypto = () => {\n    const [isShown, showResult] = useState(false);\n\n    const sendCryptoRequest = () => {\n        showResult(true);\n    }\n\n    const CryptoResults = () => {\n        if (isShown) {\n            return (\n                <div>\n                    <div>HUGE crypto guy</div>\n                </div>\n            )\n        }\n        return null;\n    }\n\n    return (\n        <div>\n            <h1>Hello Crypto API</h1>\n            <div>lets get this bread</div>\n            <button onClick={sendCryptoRequest}>Get Bread (chaching)</button>\n            <CryptoResults/>\n        </div>\n    );\n}\n\nexport default Crypto;"]},"metadata":{},"sourceType":"module"}
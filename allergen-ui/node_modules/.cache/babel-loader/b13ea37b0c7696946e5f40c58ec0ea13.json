{"ast":null,"code":"import _slicedToArray from \"/Users/nickwhite/go/antipathy/allergen-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nickwhite/go/antipathy/allergen-ui/src/components/CameraFeed.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Webcam } from 'react-webcam';\nexport const CameraFeed = () => {\n  const getWebcam = () => {\n    var cameraElement = document.createElement('canvas');\n    var webcam = React.createElement(Webcam, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    });\n    return setWebcam(webcam);\n  };\n\n  const initialImage = {\n    image: null,\n    isLoading: false,\n    capturured: false,\n    webcam: null\n  };\n\n  const _useState = useState([initialImage]),\n        _useState2 = _slicedToArray(_useState, 2),\n        capturedImage = _useState2[0],\n        setCapturedImage = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        webcam = _useState4[0],\n        setWebcam = _useState4[1];\n\n  useEffect(() => {\n    if (!capturedImage.image) {\n      const currentState = [...capturedImage];\n      currentState.webcam = getWebcam();\n    }\n  });\n  useEffect(capturedImage => {\n    if (capturedImage.captured) {}\n  });\n  const uploading = capturedImage.isLoading ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Uploading, hold on....\")) : React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, capturedImage.image);\n  const current = !capturedImage.captured ? React.createElement(\"input\", {\n    type: \"file\",\n    accept: \"image/*\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }) : capturedImage.image;\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, uploading), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, current), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, capturedImage.webcam), React.createElement(Button, {\n    className: \"captureButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Upload Photo\"), React.createElement(Button, {\n    className: \"takePicture\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Take Picture\"));\n};\nexport default CameraFeed;","map":{"version":3,"sources":["/Users/nickwhite/go/antipathy/allergen-ui/src/components/CameraFeed.js"],"names":["React","axios","useState","useEffect","Button","Webcam","CameraFeed","getWebcam","cameraElement","document","createElement","webcam","setWebcam","initialImage","image","isLoading","capturured","capturedImage","setCapturedImage","currentState","captured","uploading","current"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,MAAT,QAAuB,cAAvB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC5B,QAAMC,SAAS,GAAG,MAAM;AACpB,QAAIC,aAAa,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAApB;AACA,QAAIC,MAAM,GAAG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAb;AAEA,WAAOC,SAAS,CAACD,MAAD,CAAhB;AACH,GALD;;AAMA,QAAME,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAE,IADU;AAEjBC,IAAAA,SAAS,EAAE,KAFM;AAGjBC,IAAAA,UAAU,EAAE,KAHK;AAIjBL,IAAAA,MAAM,EAAE;AAJS,GAArB;;AAP4B,oBAacT,QAAQ,CAAC,CAACW,YAAD,CAAD,CAbtB;AAAA;AAAA,QAarBI,aAbqB;AAAA,QAaNC,gBAbM;;AAAA,qBAcAhB,QAAQ,CAAC,EAAD,CAdR;AAAA;AAAA,QAcrBS,MAdqB;AAAA,QAcbC,SAda;;AAgB5BT,EAAAA,SAAS,CAAC,MAAK;AACX,QAAI,CAACc,aAAa,CAACH,KAAnB,EACA;AACI,YAAMK,YAAY,GAAG,CAAC,GAAGF,aAAJ,CAArB;AACAE,MAAAA,YAAY,CAACR,MAAb,GAAsBJ,SAAS,EAA/B;AACH;AAEJ,GAPQ,CAAT;AASAJ,EAAAA,SAAS,CAACc,aAAa,IAAI;AACvB,QAAIA,aAAa,CAACG,QAAlB,EAA4B,CAE3B;AACJ,GAJQ,CAAT;AAMA,QAAMC,SAAS,GAAGJ,aAAa,CAACF,SAAd,GACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,CADc,GAId;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOE,aAAa,CAACH,KAArB,CAJJ;AAMA,QAAMQ,OAAO,GAAG,CAACL,aAAa,CAACG,QAAf,GACZ;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,MAAM,EAAC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADY,GAGZH,aAAa,CAACH,KAHlB;AAIA,SACI,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMO,SAAN,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,OAAN,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAML,aAAa,CAACN,MAApB,CAHJ,EAII,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,EAKI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,CADJ;AASH,CAlDM;AAoDP,eAAeL,UAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Webcam } from 'react-webcam';\n\nexport const CameraFeed = () => {\n    const getWebcam = () => {\n        var cameraElement = document.createElement('canvas');\n        var webcam = <Webcam />\n\n        return setWebcam(webcam);\n    }\n    const initialImage = {\n        image: null,\n        isLoading: false,\n        capturured: false,\n        webcam: null\n    };\n    const [capturedImage, setCapturedImage] = useState([initialImage]);\n    const [webcam, setWebcam] = useState([]);\n\n    useEffect(() =>{\n        if (!capturedImage.image)\n        {\n            const currentState = [...capturedImage];\n            currentState.webcam = getWebcam();\n        }\n        \n    });\n\n    useEffect(capturedImage => {\n        if (capturedImage.captured) {\n\n        }\n    })\n\n    const uploading = capturedImage.isLoading ?\n        <div>\n            <p>Uploading, hold on....</p>\n        </div> :\n        <span>{capturedImage.image}</span>\n\n    const current = !capturedImage.captured ? \n        <input type=\"file\" accept=\"image/*\"/> \n        :\n        capturedImage.image;\n    return (\n        <>\n            <div>{uploading}</div>\n            <div>{current}</div>\n            <div>{capturedImage.webcam}</div>\n            <Button className=\"captureButton\">Upload Photo</Button>\n            <Button className='takePicture'>Take Picture</Button>\n        </>\n    );\n};\n\nexport default CameraFeed;"]},"metadata":{},"sourceType":"module"}
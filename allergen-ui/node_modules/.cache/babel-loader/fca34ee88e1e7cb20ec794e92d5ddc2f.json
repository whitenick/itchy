{"ast":null,"code":"import _slicedToArray from \"/Users/nickwhite/go/antipathy/allergen-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nickwhite/go/antipathy/allergen-ui/src/components/Title.js\";\nimport React from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { InputGroup, InputGroupAddon, InputGroupText, Input } from 'reactstrap';\nimport { useState, useEffect } from 'react';\n\nconst Title = props => {\n  const _useState = useState([{\n    value: \"No results\"\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        objects = _useState2[0],\n        setActiveObjects = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        seleced = _useState4[0],\n        setSelected = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        inputGroups = _useState6[0],\n        setInputs = _useState6[1];\n\n  const _useState7 = useState(1),\n        _useState8 = _slicedToArray(_useState7, 2),\n        groupCount = _useState8[0],\n        setCount = _useState8[1];\n\n  const registerAllergies = e => {\n    console.log(e);\n    console.log(seleced);\n  };\n\n  const allergyClick = e => {\n    console.log(e.target.selectedOptions);\n    var options = [...e.target.selectedOptions];\n    setSelected([...options.map(option => option.value)]);\n  };\n\n  const handleInput = e => {\n    console.log(e);\n  };\n\n  const inputItem = () => {\n    var inputList = [];\n\n    var inputFrame = () => {\n      return React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Input, {\n        onChange: e => handleInput(e),\n        addon: true,\n        type: \"checkbox\",\n        \"aria-label\": \"Checkbox for following text input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        placeholder: \"Add ingredient ...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }));\n    };\n\n    for (var i = 0; i < groupCount; i++) {\n      inputList.push(inputFrame());\n    }\n\n    setInputs([inputList]);\n  };\n\n  useEffect(() => {\n    inputItem();\n  }, [groupCount]);\n  return React.createElement(\"div\", {\n    className: \"title-form container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, props.text), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, inputGroups, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => setCount(groupCount + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"add ingeredient...\")), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: e => registerAllergies(e),\n    variant: \"primary\",\n    size: \"md\",\n    active: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Submit\"))));\n};\n\nexport function Copy() {\n  const _useState9 = useState([{\n    value: \"No results\"\n  }]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        objects = _useState10[0],\n        setActiveObjects = _useState10[1];\n\n  const _useState11 = useState([\"No Results\"]),\n        _useState12 = _slicedToArray(_useState11, 2),\n        seleced = _useState12[0],\n        setSelected = _useState12[1];\n\n  const registerAllergies = e => {\n    console.log(e);\n    console.log(seleced);\n  };\n\n  return React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"exampleForm.ControlSelect1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Allergies:\"), React.createElement(Form.Control, {\n    onChange: e => {\n      console.log(e.target.value);\n      setSelected([...seleced, e.target.value]);\n    },\n    as: \"select\",\n    multiple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Peanuts\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Eggs\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Tree Nuts\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Dairy\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Gluten\"))), React.createElement(Form.Group, {\n    controlId: \"exampleForm.ControlTextarea1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Example textarea\"), React.createElement(Form.Control, {\n    as: \"textarea\",\n    rows: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })), React.createElement(Button, {\n    onClick: registerAllergies,\n    variant: \"primary\",\n    size: \"md\",\n    active: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, seleced)));\n}\nexport default Title;","map":{"version":3,"sources":["/Users/nickwhite/go/antipathy/allergen-ui/src/components/Title.js"],"names":["React","Form","Button","InputGroup","InputGroupAddon","InputGroupText","Input","useState","useEffect","Title","props","value","objects","setActiveObjects","seleced","setSelected","inputGroups","setInputs","groupCount","setCount","registerAllergies","e","console","log","allergyClick","target","selectedOptions","options","map","option","handleInput","inputItem","inputList","inputFrame","i","push","text","Copy"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Form, Button} from 'react-bootstrap';\nimport {InputGroup, InputGroupAddon, InputGroupText, Input} from 'reactstrap';\nimport {useState, useEffect} from 'react';\n\nconst Title = props => {\n    const [objects, setActiveObjects] = useState([{value: \"No results\"}])\n    const [seleced, setSelected] = useState([]);\n    const [inputGroups, setInputs] = useState([]);\n    const [groupCount, setCount] = useState(1);\n\n    const registerAllergies = (e) => {\n        console.log(e);\n        console.log(seleced);\n    }\n    \n    const allergyClick = (e) => {\n        console.log(e.target.selectedOptions);\n        var options = [...e.target.selectedOptions];\n        setSelected([...options.map(option => option.value)])\n    }\n\n    const handleInput = (e) => {\n        console.log(e);\n    }\n\n    const inputItem = () => {\n        var inputList = [];\n        var inputFrame = () => {\n            return (\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                            <Input onChange={(e) => handleInput(e)} addon type=\"checkbox\" aria-label=\"Checkbox for following text input\" />\n                        </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Add ingredient ...\" />\n                </InputGroup>\n            );\n        }\n        for (var i = 0; i < groupCount; i++) {\n            inputList.push(inputFrame());\n        }\n\n        setInputs([inputList]);\n    }\n\n    useEffect(() => {\n        inputItem();\n    }, [groupCount]);\n    \n    return (\n        <div className='title-form container'>\n            <h1 className=\"title\">{props.text}</h1>\n            <Form>\n                {inputGroups}\n                <div className='row'>\n                    <Button onClick={() => setCount(groupCount + 1)}>\n                        add ingeredient...\n                    </Button>\n                </div>\n                <div className='row'>\n                    <Button onClick={(e) => registerAllergies(e)} variant=\"primary\" size=\"md\" active>\n                        Submit\n                    </Button>\n                </div>\n            </Form>\n            \n        </div>\n    );\n}\n\nexport function Copy() {\n    const [objects, setActiveObjects] = useState([{value: \"No results\"}])\n    const [seleced, setSelected] = useState([\"No Results\"]);\n    const registerAllergies = (e) => {\n        console.log(e);\n        console.log(seleced);\n    }\n\n    return (\n        <Form>\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                <Form.Label>Allergies:</Form.Label>\n                <Form.Control onChange={(e) => {\n                    console.log(e.target.value);\n                    setSelected([...seleced, e.target.value])} } as=\"select\" multiple>\n                    <option >Peanuts</option>\n                    <option>Eggs</option>\n                    <option>Tree Nuts</option>\n                    <option>Dairy</option>\n                    <option>Gluten</option>\n                </Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                <Form.Label>Example textarea</Form.Label>\n                <Form.Control as=\"textarea\" rows=\"3\" />\n            </Form.Group>\n            <Button onClick={registerAllergies} variant=\"primary\" size=\"md\" active>\n                Submit\n            </Button>\n            <div>\n                <ul>{seleced}</ul>\n            </div>\n        </Form>\n    )\n}\n\nexport default Title;\n\n  "]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/Users/nickwhite/go/antipathy/allergen-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nickwhite/go/antipathy/allergen-ui/src/components/Title.js\";\nimport React from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { InputGroup, InputGroupAddon, InputGroupText, Input } from 'reactstrap';\nimport { useState } from 'react';\n\nconst Title = props => {\n  const _useState = useState([{\n    value: \"No results\"\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        objects = _useState2[0],\n        setActiveObjects = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        seleced = _useState4[0],\n        setSelected = _useState4[1];\n\n  const registerAllergies = e => {\n    console.log(e);\n    console.log(seleced);\n  };\n\n  const allergyClick = e => {\n    console.log(e.target.selectedOptions);\n    var options = [...e.target.selectedOptions];\n    setSelected([...options.map(option => option.value)]);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, props.text), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(InputGroupAddon, {\n    addonType: \"prepend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(InputGroupText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Input, {\n    addon: true,\n    type: \"checkbox\",\n    \"aria-label\": \"Checkbox for following text input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }))), React.createElement(Input, {\n    placeholder: \"Check it out\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), React.createElement(Button, {\n    onClick: registerAllergies,\n    variant: \"primary\",\n    size: \"md\",\n    active: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nexport function Copy() {\n  const _useState5 = useState([{\n    value: \"No results\"\n  }]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        objects = _useState6[0],\n        setActiveObjects = _useState6[1];\n\n  const _useState7 = useState([\"No Results\"]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        seleced = _useState8[0],\n        setSelected = _useState8[1];\n\n  const registerAllergies = e => {\n    console.log(e);\n    console.log(seleced);\n  };\n\n  return React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"exampleForm.ControlSelect1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Allergies:\"), React.createElement(Form.Control, {\n    onChange: e => {\n      console.log(e.target.value);\n      setSelected([...seleced, e.target.value]);\n    },\n    as: \"select\",\n    multiple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Peanuts\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Eggs\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Tree Nuts\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Dairy\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Gluten\"))), React.createElement(Form.Group, {\n    controlId: \"exampleForm.ControlTextarea1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Example textarea\"), React.createElement(Form.Control, {\n    as: \"textarea\",\n    rows: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), React.createElement(Button, {\n    onClick: registerAllergies,\n    variant: \"primary\",\n    size: \"md\",\n    active: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, seleced)));\n}\nexport default Title;","map":{"version":3,"sources":["/Users/nickwhite/go/antipathy/allergen-ui/src/components/Title.js"],"names":["React","Form","Button","InputGroup","InputGroupAddon","InputGroupText","Input","useState","Title","props","value","objects","setActiveObjects","seleced","setSelected","registerAllergies","e","console","log","allergyClick","target","selectedOptions","options","map","option","text","Copy"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Form, Button} from 'react-bootstrap';\nimport {InputGroup, InputGroupAddon, InputGroupText, Input} from 'reactstrap';\nimport {useState} from 'react';\n\nconst Title = props => {\n    const [objects, setActiveObjects] = useState([{value: \"No results\"}])\n    const [seleced, setSelected] = useState([]);\n    const registerAllergies = (e) => {\n        console.log(e);\n        console.log(seleced);\n    }\n    \n    const allergyClick = (e) => {\n        console.log(e.target.selectedOptions);\n        var options = [...e.target.selectedOptions];\n        setSelected([...options.map(option => option.value)])\n    }\n    \n    \n    return (\n        <div>\n            <h1 className=\"title\">{props.text}</h1>\n            <Form>\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                            <Input addon type=\"checkbox\" aria-label=\"Checkbox for following text input\" />\n                        </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Check it out\" />\n                </InputGroup>\n                <Button onClick={registerAllergies} variant=\"primary\" size=\"md\" active>\n                    Submit\n                </Button>\n            </Form>\n        </div>\n    );\n}\n\nexport function Copy() {\n    const [objects, setActiveObjects] = useState([{value: \"No results\"}])\n    const [seleced, setSelected] = useState([\"No Results\"]);\n    const registerAllergies = (e) => {\n        console.log(e);\n        console.log(seleced);\n    }\n\n    return (\n        <Form>\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                <Form.Label>Allergies:</Form.Label>\n                <Form.Control onChange={(e) => {\n                    console.log(e.target.value);\n                    setSelected([...seleced, e.target.value])} } as=\"select\" multiple>\n                    <option >Peanuts</option>\n                    <option>Eggs</option>\n                    <option>Tree Nuts</option>\n                    <option>Dairy</option>\n                    <option>Gluten</option>\n                </Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                <Form.Label>Example textarea</Form.Label>\n                <Form.Control as=\"textarea\" rows=\"3\" />\n            </Form.Group>\n            <Button onClick={registerAllergies} variant=\"primary\" size=\"md\" active>\n                Submit\n            </Button>\n            <div>\n                <ul>{seleced}</ul>\n            </div>\n        </Form>\n    )\n}\n\nexport default Title;\n\n  "]},"metadata":{},"sourceType":"module"}